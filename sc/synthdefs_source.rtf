{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fnil\fcharset0 Monaco;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red0\green115\blue0;\red191\green0\blue0;
\red56\green156\blue51;\red21\green156\blue5;\red32\green32\blue32;\red96\green96\blue96;}
\deftab560
\pard\pardeftab560\ql\qnatural

\f0\fs18 \cf2 SynthDef\cf0 (\cf3 \\
\fs20 EnvelopedSine
\fs18 \cf0 , \{ \cf2 | out, freq = 440, gate = 1,
\fs20  a=0.1, d=0.1, s=0.5, r=0.5
\fs18  |\cf0  \
		\cf2 var\cf0  z, smooth;\
		smooth = \cf2 LPF\cf0 .kr(freq,2); \cf4 //portamento\cf0 \
		z = \cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .adsr, gate) * \cf2 SinOsc\cf0 .ar(smooth, 0, 0.1);\
		\cf2 Out\cf0 .ar(out, z)\
	\}).
\fs20 play
\fs18 (s);\
	\
	\
\cf2 SynthDef\cf0 (\cf3 \\clar\cf0 , \{ \cf2 | y = 0.5, size = 0.5, gate = 1, hue, x |\cf0  \
		\cf2 var\cf0  amp, input, ab, ba, bell, p_diff, p_in, pitch, sound, noise_gate, p_m, shape;\
		\
   		\
   		
\f1\fs20 shape \cf5 =\cf0  Env\cf6 ([\cf0 1\cf5 ,\cf0  0\cf5 ,\cf0  \cf5 -\cf0 0.7\cf5 ,\cf0  0\cf5 ,\cf0  1\cf6 ]\cf5 ,\cf0  \cf6 [\cf0 0.3\cf5 ,\cf0  0.1\cf5 ,\cf0  0.1\cf5 ,\cf0  0.3\cf6 ]\cf5 ,\cf0  \cf6 [\cf0 4\cf5 ,\cf0  \cf5 -\cf0 4\cf5 ,\cf0  4\cf5 ,\cf0  \cf5 -\cf0 4\cf6 ])\cf0 .\cf7 asSignal\cf6 (\cf0 512\cf6 )\cf0 .\cf7 asWavetable\cf5 ; //super ruig!
\f0\fs18 \cf0 \
   		\
   		pitch = round( linlin(y,0,1,60,96) , 1).midicps;\
		\
		ba = \cf2 DelayC\cf0 .ar(\cf2 InFeedback\cf0 .ar(10, 1), 100.reciprocal , pitch.reciprocal, 1); \cf4 //air that has returned \cf0 \
				\
		p_m = \cf2 K2A\cf0 .ar(size=0.4) * \cf2 EnvGen\cf0 .ar(\cf2 Env\cf0 .cutoff(0.2, 1), gate);    \cf4 //env sustains 1, release in 0.2\cf0 \
				\
		p_diff = p_m - ba;\
		\
		p_in = \cf2 Shaper\cf0 .ar(shape.as(LocalBuf),p_diff,p_m);\
		\
		ab = \cf2 DelayC\cf0 .ar(p_in, 100.reciprocal , pitch.reciprocal, 1); \cf4 //air at bell\cf0 \
		\
		bell = \cf2 LPF\cf0 .ar(ab, linlin(hue,0,1,500,5000)); \cf4 //bell reflection\cf0 \
		\
		\cf2 Out\cf0 .ar(10, bell); \cf4 //feedback\cf0 \
		\
		sound = \cf2 HPF\cf0 .ar(bell,500); \
		 \
		\cf2 Out\cf0 .ar(0, \cf2 Pan2\cf0 .ar(sound,linlin(x,0.2,0.8,1,-1),1) ); \cf4 //out\cf0 \
	\
	\}).writeDefFile("/Users/lodewijk/dev/opencv2/svn/video-to-sound/sc/");\
	\
	\
	\
	\
a = \cf2 Synth\cf0 (\cf3 \\clar\cf0 );	\
s.boot;\
\
a.set(\cf3 \\x\cf0 ,0.5);\
a.set(\cf3 \\size\cf0 ,0.4);\
a.set(\cf3 \\hue\cf0 ,0.50);\
a.set(\cf3 \\y\cf0 ,0.5);\
a.set(\cf3 \\gate\cf0 ,0);\
\
\
(round(60 + (0.25 * 36), 1)).midicps;\
\
linlin(1.5,0,1,0,5000);\
\
~window = \cf2 Window\cf0  (\cf8 "Slider"\cf0 );\
\
\
4.do\{ \cf2 |i|\cf0  \
	\cf2 var\cf0  slide;\
	slide = \cf2 Slider\cf0 (~window, \cf2 Rect\cf0 (20, 25 * i, 150, 20));\
	slide.action=\{ \cf2 |slider|\cf0 \
		\cf2 var\cf0  msg;\
		msg = \cf2 NetAddr\cf0 (\cf8 "127.0.0.1"\cf0 , 6000); \
		msg.sendMsg(\cf8 "/slider"\cf0 ,i,slider.value * 500); \
	\
	\};\
\};}